import{_ as l,c as r,a as e,b as i,d as s,e as t,r as o,o as p}from"./app-Cw6juzso.js";const d={},u={href:"https://wiki.archlinux.org/title/Installation_guide",target:"_blank",rel:"noopener noreferrer"},c={href:"https://gparted.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://archlinux.org/download/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://rufus.ie/en/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.ventoy.net/en/index.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://wiki.archlinux.org/title/Iwd#iwctl",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.geeksforgeeks.org/cfdisk-command-in-linux-with-examples/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://wiki.archlinux.org/title/Fdisk",target:"_blank",rel:"noopener noreferrer"},f={href:"https://man.archlinux.org/man/hwclock.8",target:"_blank",rel:"noopener noreferrer"},w={href:"https://wiki.archlinux.org/title/Mkinitcpio",target:"_blank",rel:"noopener noreferrer"},y={href:"https://wiki.archlinux.org/title/Kernel",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.youtube.com/watch?v=JRdYSGh-g3s&t=1361s",target:"_blank",rel:"noopener noreferrer"},I={href:"https://wiki.archlinux.org/title/Arch_boot_process#Boot_loader",target:"_blank",rel:"noopener noreferrer"},P={href:"https://wiki.archlinux.org/title/Microcode",target:"_blank",rel:"noopener noreferrer"},S={href:"https://wiki.archlinux.org/title/GRUB",target:"_blank",rel:"noopener noreferrer"},j={href:"https://wiki.archlinux.org/title/GRUB",target:"_blank",rel:"noopener noreferrer"},T={href:"https://wiki.archlinux.org/title/NetworkManager",target:"_blank",rel:"noopener noreferrer"};function B(C,n){const a=o("ExternalLinkIcon");return p(),r("div",null,[n[70]||(n[70]=e("h2",{id:"arch-installation-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch-installation-guide"},[e("span",null,"Arch Installation Guide")])],-1)),e("p",null,[n[1]||(n[1]=s("Before starting, it's recommended to read the ")),e("a",u,[n[0]||(n[0]=s("official installation guide")),t(a)]),n[2]||(n[2]=s(" and understand the major concepts."))]),n[71]||(n[71]=e("p",null,[e("strong",null,"Note: This guide only works with UEFI/GPT Systems. For BIO/MBR Systems, this guide will NOT work.")],-1)),n[72]||(n[72]=e("h3",{id:"part-1-preparation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#part-1-preparation"},[e("span",null,"Part 1. Preparation")])],-1)),e("ol",null,[e("li",null,[n[7]||(n[7]=e("p",null,"Prepare an unallocated free space for Arch (Recommended 80GB+)",-1)),e("ul",null,[n[5]||(n[5]=e("li",null,"Windows partitioning tool: diskmgmt.msc",-1)),e("li",null,[n[4]||(n[4]=s("Linux partition tool: ")),e("a",c,[n[3]||(n[3]=s("GParted")),t(a)])]),n[6]||(n[6]=e("li",null,[e("strong",null,"If Dual-Booting with Windows:"),s(" Take notes on the "),e("strong",null,"Windows EFI Partition Directory")],-1))])]),e("li",null,[e("p",null,[n[9]||(n[9]=s("Install the Arch mirror ISO from the ")),e("a",m,[n[8]||(n[8]=s("official website")),t(a)]),n[10]||(n[10]=s(", for country, selecting any mirror from the US"))])]),e("li",null,[e("p",null,[n[13]||(n[13]=s("Write the ISO into a bootable USB using ")),e("a",h,[n[11]||(n[11]=s("Rufus")),t(a)]),n[14]||(n[14]=s(" or ")),e("a",g,[n[12]||(n[12]=s("Ventoy")),t(a)]),n[15]||(n[15]=s(" for multiple ISOs on the same USB"))])]),n[16]||(n[16]=e("li",null,[e("p",null,[s("Reboot into system BIOS System and boot into the USB."),e("br"),e("strong",null,"Note: Turn off secure boot")])],-1))]),n[73]||(n[73]=e("h3",{id:"part-2-connect-to-the-internet",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#part-2-connect-to-the-internet"},[e("span",null,"Part 2. Connect to the Internet")])],-1)),e("ol",null,[e("li",null,[e("p",null,[n[18]||(n[18]=s("Use ")),e("a",v,[n[17]||(n[17]=s("iwctl tool")),t(a)]),n[19]||(n[19]=s(" for internet connection"))]),n[20]||(n[20]=i(`<ul><li>To ensure that the network adaptor is successfully detected by the system, list the network devices available using<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">device list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p><strong>If not network adaptor is shown, force shutdown and reboot. If problem persist, Arch is not for you.</strong></p><ul><li>Proceed with station scanning:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">station <span class="token operator">&lt;</span>device<span class="token operator">&gt;</span> scan</span>
<span class="line">station <span class="token operator">&lt;</span>device<span class="token operator">&gt;</span> get-networks</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>For connection:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">station <span class="token operator">&lt;</span>device_name<span class="token operator">&gt;</span> connect “<span class="token operator">&lt;</span>network_name<span class="token operator">&gt;</span>”</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Check whether the internet connection is successfully established</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ping</span> archlinux.org</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,8))])]),n[74]||(n[74]=e("h3",{id:"part-3-partitioning",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#part-3-partitioning"},[e("span",null,"Part 3. Partitioning")])],-1)),e("p",null,[n[23]||(n[23]=s("Both ")),e("a",b,[n[21]||(n[21]=s("cfdisk")),t(a)]),n[24]||(n[24]=s(" and ")),e("a",k,[n[22]||(n[22]=s("fdisk")),t(a)]),n[25]||(n[25]=s(" are available as tools for partitioning. In this guide, ")),n[26]||(n[26]=e("strong",null,"cfdisk",-1)),n[27]||(n[27]=s(" would be used"))]),n[75]||(n[75]=i(`<ol><li><p>List the hard drives and partition:</p><ul><li>Take notes on the hard drive name.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Examples: </span></span>
<span class="line">/dev/nvme0n1</span>
<span class="line">/dev/sda<span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>Run:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cfdisk</span> /dev/primary <span class="token operator">&lt;</span>Hard drive name<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Example</span></span>
<span class="line"><span class="token function">cfdisk</span> /dev/nvme0n1.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>Search for the <strong>unallocated space</strong> designated for Arch</li></ul></li><li><p>Essential Partitions:</p><ul><li><p><strong>EFI Partition</strong></p><ul><li>If Dual-Booting with Windows, simply use the Windows EFI Partition, <strong>do not</strong> create another EFI partition as it may <strong>prevent</strong> Windows from booting</li><li>If no EFI partition is available, partition at least 512MiB for EFI Partition. <ul><li>Press <strong>t</strong> for choosing the type of partition and select <strong>EFI System Partition</strong></li></ul></li></ul></li><li><p><strong>Swap Partition</strong></p><ul><li>Computer Ram + 4 = Swap Partition Size. E.g. 16 GB ram + 4 = 20 GB <ul><li>Press <strong>t</strong> for choosing the type of partition and select <strong>Linux Swap</strong></li></ul></li></ul></li><li><p><strong>Root Parition: Two Options</strong></p><ol><li>Leave the rest of the partition for root partition <ul><li>Press <strong>t</strong> for choosing the type of partition and select <strong>Linux x86-64 root (/)</strong></li></ul></li><li>Leave at least 30 GB for root and the rest for home <ul><li>Write the partitions</li></ul></li></ol></li></ul></li><li><p>Formatting:</p><ul><li>To format the EFI partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mkfs.fat <span class="token parameter variable">-F</span> <span class="token number">32</span> /dev/<span class="token operator">&lt;</span>efi_system_partition<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Skip this step if you already have a EFI Partition</strong></p><ul><li>To format the root partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mkfs.ext4 /dev/<span class="token operator">&lt;</span>root_partition<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>To format the swap partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"> <span class="token function">mkswap</span> /dev/<span class="token operator">&lt;</span>swap_partition<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>To format the home partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"> mkfs.ext4 /dev/<span class="token operator">&lt;</span>home_partition<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Mount System Partitions:</p><ul><li>To mount the root partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mount</span> /dev/root_partition /mnt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>To mount the EFI partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mount</span> /dev/efi_partition /mnt/boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>If directory does not exist make the directory:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> /mnt/boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>To enable the Swap partition run:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">swapon</span> /dev/swap_partition </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="part-4-installation" tabindex="-1"><a class="header-anchor" href="#part-4-installation"><span>Part 4. Installation</span></a></h3><p>Run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pacstrap <span class="token parameter variable">-K</span> /mnt base linux linux-firmware <span class="token function">nano</span> networkmanager</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="part-5-system-configuration" tabindex="-1"><a class="header-anchor" href="#part-5-system-configuration"><span>Part 5. System Configuration</span></a></h3>`,5)),e("ol",null,[n[41]||(n[41]=i(`<li><p>To generate fstab with UUID (recommended) Run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">genfstab <span class="token parameter variable">-U</span> /mnt <span class="token operator">&gt;&gt;</span> /mnt/etc/fstab</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Chroot into the Arch System</p><ul><li>Run:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">arch-chroot /mnt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p><strong>This means that everything you install from now on will be saved onto your computer’s root partition hard disks. This is the root in your current Arch system inside your root partition.</strong></p></li>`,2)),e("li",null,[n[33]||(n[33]=e("p",null,"Time:",-1)),e("ul",null,[n[32]||(n[32]=i(`<li><p>Run</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/share/zoneinfo/<span class="token operator">&lt;</span>Region<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>City<span class="token operator">&gt;</span>/etc/localtime</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Example setting the timezone to Caracas, Venezuela:</span></span>
<span class="line"><span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/share/zoneinfo/Americas/Caracas/etc/localtime</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1)),e("li",null,[e("p",null,[n[29]||(n[29]=s("Run ")),e("a",f,[n[28]||(n[28]=s("hwclock")),t(a)]),n[30]||(n[30]=s(" to generate /etc/adjtime:"))]),n[31]||(n[31]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hwclock <span class="token parameter variable">--systohc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>This command assumes the hardware clock is set to UTC</strong></p>`,2))])])]),n[42]||(n[42]=i(`<li><p>Localization:</p><ul><li>edit <code>/etc/locale.gen</code> and uncomment <code>en_US.UTF-8 UTF-8</code> and other needed UTF-8 locales<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Example: (Note: nano is an editor)</span></span>
<span class="line"><span class="token function">nano</span> /etc/locale.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><code>Ctrl + o</code> and enter to save the changes and <code>Ctrl + x</code> to exit</li></ul></li>`,1)),e("li",null,[n[40]||(n[40]=e("p",null,"Initramfs:",-1)),e("ul",null,[e("li",null,[e("p",null,[n[36]||(n[36]=s('"Creating a new initramfs is usually not required, because ')),e("a",w,[n[34]||(n[34]=s("mkinitcpio")),t(a)]),n[37]||(n[37]=s(" was run on installation of the ")),e("a",y,[n[35]||(n[35]=s("kernel")),t(a)]),n[38]||(n[38]=s(' package with pacstrap." -Archlinux.org'))]),n[39]||(n[39]=i(`<p><strong>Run it if you have system encryption (Bitlocker)</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mkinitcpio <span class="token parameter variable">-P</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2))])])]),n[43]||(n[43]=i(`<li><p>Create locale.conf file</p><ul><li>Create directory <code>/etc/locale.conf</code><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Example: (Note: nano is an editor)</span></span>
<span class="line"><span class="token function">nano</span> /etc/locale.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>Type:<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><code>Ctrl + o</code> and enter to save the changes and <code>Ctrl + x</code> to exit</li></ul></li>`,1))]),n[76]||(n[76]=i(`<h3 id="part-6-network-configuration" tabindex="-1"><a class="header-anchor" href="#part-6-network-configuration"><span>Part 6. Network Configuration</span></a></h3><ul><li>Create the hostname file in /etc/hostname Eg. nano /etc/hostname</li><li>Add your host name</li><li>Complete the network configuration for the newly installed environment. That may include installing suitable network management software, configuring it if necessary and enabling its systemd unit so that it starts at boot.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">systemctl <span class="token builtin class-name">enable</span> NetworkManager</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="part-7-root-password" tabindex="-1"><a class="header-anchor" href="#part-7-root-password"><span>Part 7. Root Password</span></a></h3>`,3)),e("ol",null,[n[48]||(n[48]=i(`<li><p>To create a root password, run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">passwd</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li>`,1)),e("li",null,[n[47]||(n[47]=i(`<p>If a normal user is desired, you can create another user by running:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token operator">&lt;</span>user-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>To give the user a password, run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">passwd</span> <span class="token operator">&lt;</span>user-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Make user a superuser:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pacman <span class="token parameter variable">-S</span> Sudo</span>
<span class="line"><span class="token function">usermod</span> <span class="token parameter variable">-aG</span> wheel,storage,power user-name</span>
<span class="line"><span class="token assign-left variable">EDITOR</span><span class="token operator">=</span>nano visudo</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Uncomment</strong> <code>%wheel ALL-(ALL) ALL</code> <strong>and add</strong> <code>Defaults timestamp_timeout=0</code> <strong>directly under</strong></p><p><code>Ctrl + o</code> and enter to save the changes and <code>Ctrl + x</code> to exit</p></li></ul>`,3)),e("p",null,[n[45]||(n[45]=s("For more information, reference to this ")),e("a",x,[n[44]||(n[44]=s("Youtube Video")),t(a)]),n[46]||(n[46]=s(" at minute 21:11"))])])]),n[77]||(n[77]=e("h3",{id:"part-8-bootloader",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#part-8-bootloader"},[e("span",null,"Part 8 Bootloader")])],-1)),e("ol",null,[e("li",null,[e("p",null,[n[51]||(n[51]=s("Choose and install a ")),e("a",I,[n[49]||(n[49]=s("Linux-capable bootloader")),t(a)]),n[52]||(n[52]=s(". If you have an Intel or AMD CPU, enable ")),e("a",P,[n[50]||(n[50]=s("Microcode")),t(a)]),n[53]||(n[53]=s(" updates in addition."))]),n[57]||(n[57]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># For Intel CPU: </span></span>
<span class="line">pacman <span class="token parameter variable">-S</span> amd-ucode</span>
<span class="line"></span>
<span class="line"><span class="token comment"># For AMD CPU: </span></span>
<span class="line">pacman <span class="token parameter variable">-S</span> amd-ucode</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),e("p",null,[e("strong",null,[n[55]||(n[55]=s("In this guide, ")),e("a",S,[n[54]||(n[54]=s("Grub")),t(a)]),n[56]||(n[56]=s(" would be used as a bootloader"))])]),n[58]||(n[58]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Install grub and efibootmgr: </span></span>
<span class="line">pacman <span class="token parameter variable">-S</span> grub efibootmgr</span>
<span class="line"></span>
<span class="line"><span class="token comment"># For Dual-Booting: </span></span>
<span class="line">pacman <span class="token parameter variable">-S</span> os-probernmcli device wifi connect SSID_or_BSSID password password</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>If using <code>os-prober</code>, edit <code>/etc/default/grub</code> and uncomment the last line <code>GRUB_DISABLE_OS_PROBER=false</code></strong></p>`,2))]),n[64]||(n[64]=i(`<li><p>Run <code>grub-install</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">grub-install <span class="token parameter variable">--target</span><span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span> <span class="token operator">&lt;</span>EFI_partition_mount_directory<span class="token operator">&gt;</span> --bootloader-id<span class="token operator">=</span>Arch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Not: Make sure that the EFI partition have enough storage, you can delete unwanted bootloaders by:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span> /boot</span>
<span class="line"><span class="token function">ls</span> /boot/EFI</span>
<span class="line"><span class="token function">ls</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /boot/<span class="token operator">&lt;</span>directory-of-bootloader<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1)),e("li",null,[n[62]||(n[62]=e("p",null,"Now we want to create a config inside file the installed grub entry called “Arch” in the previous step",-1)),n[63]||(n[63]=e("ul",null,[e("li",null,[s("Run "),e("code",null,"grub-mkconfig -o /boot/grub/grub.cfg")])],-1)),e("p",null,[n[60]||(n[60]=s("Refer to this ")),e("a",j,[n[59]||(n[59]=s("link")),t(a)]),n[61]||(n[61]=s(" if things gets complicated"))])])]),n[78]||(n[78]=e("h3",{id:"part-9-reboot",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#part-9-reboot"},[e("span",null,"Part 9. Reboot")])],-1)),e("ol",null,[e("li",null,[e("p",null,[n[66]||(n[66]=s("Use ")),e("a",T,[n[65]||(n[65]=s("nmcli")),t(a)]),n[67]||(n[67]=s(" to connect to network"))]),n[68]||(n[68]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Show local network interface</span></span>
<span class="line">nmcli device</span>
<span class="line"></span>
<span class="line"><span class="token comment"># List nearby WIFI netoworks</span></span>
<span class="line">nmcli <span class="token operator">&lt;</span>device<span class="token operator">&gt;</span> wifi list </span>
<span class="line"></span>
<span class="line"><span class="token comment"># Connect to a WIFI network</span></span>
<span class="line">nmcli <span class="token operator">&lt;</span>device<span class="token operator">&gt;</span> wifi connect <span class="token operator">&lt;</span>SSID_or_BSSID<span class="token operator">&gt;</span> password <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),n[69]||(n[69]=i(`<li><p>Perform system update:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> pacman <span class="token parameter variable">-Syu</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Install fastfetch</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> fastfetch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Run fastfetch</p></li>`,3))]),n[79]||(n[79]=e("h3",{id:"part-10-take-picture-and-prove-you-re-a-prestigious-arch-user",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#part-10-take-picture-and-prove-you-re-a-prestigious-arch-user"},[e("span",null,"Part 10. Take picture and prove you’re a prestigious Arch user")])],-1))])}const F=l(d,[["render",B]]),E=JSON.parse('{"path":"/docs/md/arch.html","title":"Arch Linux Guide","lang":"en-US","frontmatter":{"title":"Arch Linux Guide","date":"2025/05/04","categories":["Linux Guide"]},"headers":[{"level":2,"title":"Arch Installation Guide","slug":"arch-installation-guide","link":"#arch-installation-guide","children":[{"level":3,"title":"Part 1. Preparation","slug":"part-1-preparation","link":"#part-1-preparation","children":[]},{"level":3,"title":"Part 2. Connect to the Internet","slug":"part-2-connect-to-the-internet","link":"#part-2-connect-to-the-internet","children":[]},{"level":3,"title":"Part 3. Partitioning","slug":"part-3-partitioning","link":"#part-3-partitioning","children":[]},{"level":3,"title":"Part 4. Installation","slug":"part-4-installation","link":"#part-4-installation","children":[]},{"level":3,"title":"Part 5. System Configuration","slug":"part-5-system-configuration","link":"#part-5-system-configuration","children":[]},{"level":3,"title":"Part 6. Network Configuration","slug":"part-6-network-configuration","link":"#part-6-network-configuration","children":[]},{"level":3,"title":"Part 7. Root Password","slug":"part-7-root-password","link":"#part-7-root-password","children":[]},{"level":3,"title":"Part 8 Bootloader","slug":"part-8-bootloader","link":"#part-8-bootloader","children":[]},{"level":3,"title":"Part 9. Reboot","slug":"part-9-reboot","link":"#part-9-reboot","children":[]},{"level":3,"title":"Part 10.  Take picture and prove you’re a prestigious Arch user","slug":"part-10-take-picture-and-prove-you-re-a-prestigious-arch-user","link":"#part-10-take-picture-and-prove-you-re-a-prestigious-arch-user","children":[]}]}],"git":{"createdTime":1746042571000,"updatedTime":1746042571000,"contributors":[{"name":"Lunear01","email":"IkerHuang0315@gmail.com","commits":1}]},"filePathRelative":"docs/md/arch.md"}');export{F as comp,E as data};
